function(add_my_executable target source)
    add_executable(${target} ${source})
    target_include_directories(${target} PRIVATE ${MGARDx_INCLUDES} ${SZ3_INCLUDES} ${ZSTD_INCLUDES})
    target_link_libraries(${target} ${PROJECT_NAME} ${SZ3_LIB} ${ZSTD_LIB})
endfunction()

# add_my_executable(test_mdr_cubic_refactor test_mdr_cubic_refactor.cpp)
# add_my_executable(test_mdr_cubic_reconstructor test_mdr_cubic_reconstructor.cpp)
# add_my_executable(test_mdr_refactor test_mdr_refactor.cpp)
# add_my_executable(test_mdr_reconstructor test_mdr_reconstructor.cpp)
# add_my_executable(test_pdr_refactor test_pdr_refactor.cpp)
# add_my_executable(test_pdr_reconstructor test_pdr_reconstructor.cpp)
# add_my_executable(weight weight.cpp)
# add_my_executable(test_cubic_decompose test_decompose.cpp)
# add_my_executable(test_mdr_weight_refactor test_mdr_weight_refactor.cpp)
# add_my_executable(test_mdr_weight_reconstructor test_mdr_weight_reconstructor.cpp)
# add_my_executable(test_mdr_weight_cubic_refactor test_mdr_weight_cubic_refactor.cpp)
# add_my_executable(test_mdr_weight_cubic_reconstructor test_mdr_weight_cubic_reconstructor.cpp)
# add_my_executable(refactor_data refactor_data.cpp)
# add_my_executable(halfing_Vtot halfing_Vtot.cpp)
# add_my_executable(nomask_refactor nomask_refactor.cpp)
# add_my_executable(nomask_Vtot nomask_Vtot.cpp)
# add_my_executable(test_mdr_wc_perbit_refactor test_mdr_wc_perbit_refactor.cpp)
# add_my_executable(test_mdr_wc_perbit_reconstructor test_mdr_wc_perbit_reconstructor.cpp)
# add_my_executable(test_weight_pdr_refactor test_weight_pdr_refactor.cpp)
# add_my_executable(test_weight_pdr_reconstructor test_weight_pdr_reconstructor.cpp)

# add_my_executable(pdr_Dummy_BP_refactor pdr_Dummy_BP_refactor.cpp)
# add_my_executable(pdr_Dummy_BP_Vtot pdr_Dummy_BP_Vtot.cpp)
# add_my_executable(pdr_Dummy_WBP_refactor pdr_Dummy_WBP_refactor.cpp)
# add_my_executable(pdr_Dummy_WBP_Vtot pdr_Dummy_WBP_Vtot.cpp)
# add_my_executable(pdr_SZ3_BP_refactor pdr_SZ3_BP_refactor.cpp)
# add_my_executable(pdr_SZ3_BP_Vtot pdr_SZ3_BP_Vtot.cpp)
# add_my_executable(pdr_SZ3_WBP_refactor pdr_SZ3_WBP_refactor.cpp)
# add_my_executable(pdr_SZ3_WBP_Vtot pdr_SZ3_WBP_Vtot.cpp)
# add_my_executable(PMGARD_BP_refactor PMGARD_BP_refactor.cpp)
# add_my_executable(PMGARD_BP_Vtot PMGARD_BP_Vtot.cpp)
# add_my_executable(PMGARD_WBP_refactor PMGARD_WBP_refactor.cpp)
# add_my_executable(PMGARD_WBP_Vtot PMGARD_WBP_Vtot.cpp)
# add_my_executable(pdr_Dummy_BP_T pdr_Dummy_BP_T.cpp)
# add_my_executable(pdr_Dummy_WBP_T pdr_Dummy_WBP_T.cpp)
# add_my_executable(pdr_SZ3_BP_T pdr_SZ3_BP_T.cpp)
# add_my_executable(pdr_SZ3_WBP_T pdr_SZ3_WBP_T.cpp)
# add_my_executable(PMGARD_BP_T PMGARD_BP_T.cpp)
# add_my_executable(PMGARD_WBP_T PMGARD_WBP_T.cpp)

add_my_executable(refactor refactor.cpp)
add_my_executable(qoi_Vtot qoi_Vtot.cpp)
add_my_executable(qoi_T qoi_T.cpp)